version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    container_name: server
    ports:
      - '8000:80'
    volumes:
      - ./application:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
    networks:
      - app-network

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: php
    volumes:
      - ./application:/var/www/html:delegated
    networks:
      - app-network

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: db
    restart: unless-stopped
    tty: true
    env_file:
      - ./env/mysql.env
    networks:
      - app-network

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    container_name: composer
    command: install
    volumes:
      - ./application:/var/www/html
    networks:
      - app-network
    depends_on:
      - server

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: artisan
    volumes:
      - ./application:/var/www/html
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - app-network

  npm:
    image: node
    working_dir: /var/www/html
    command: [ "sh", "-c", "npm install" ]
    volumes:
      - ./application:/var/www/html
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
